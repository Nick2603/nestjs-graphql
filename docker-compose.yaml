services:
  postgres:
    image: postgres:17.4
    container_name: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  # prisma-studio:
  #   image: node:lts-alpine3.17
  #   working_dir: /usr/src/app
  #   volumes:
  #     - ./prisma:/usr/src/app/prisma
  #     - ./package.json:/usr/src/app/package.json
  #   command: npx prisma studio --port 5555 --browser none
  #   env_file:
  #     - .env
  #   ports:
  #     - "5555:5555"
  #   networks:
  #     - my_network
  #   depends_on:
  #     - postgres


  redis:
    image: redis:8.0.0
    container_name: redis
    restart: always
    env_file:
    - .env
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - my_network
  
  # redisinsight:
  #   image: redis/redisinsight:2.68.0
  #   container_name: redisinsight
  #   restart: always
  #   ports:
  #     - "8001:8001"
  #   networks:
  #     - my_network
  #   env_file:
  #     - .env
  #   environment:
  #     - RI_REDIS_HOST=redis
  #     - RI_REDIS_PORT=${REDIS_PORT}
  #   depends_on:
  #     - redis

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.1
    container_name: es01
    environment:
      - node.name=es01
      - node.roles=master,data
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - network.host=0.0.0.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es01_data:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    networks:
      - my_network
  
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.1
    container_name: es02
    environment:
      - node.name=es02
      - node.roles=data
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - network.host=0.0.0.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es02_data:/usr/share/elasticsearch/data
    networks:
      - my_network

  kibana:
    image: docker.elastic.co/kibana/kibana:9.0.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=["http://es01:9200"]
    ports:
      - "5601:5601"
    networks:
      - my_network
    depends_on:
      - es01
      - es02
  
  # backend:
  #   container_name: backend
  #   restart: always
  #   depends_on:
  #     - postgres
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   env_file:
  #     - .env
  #   environment:
  #     PORT: ${PORT}
  #     NODE_ENV: ${NODE_ENV}
  #     DB_HOST: ${DB_HOST}
  #     DB_PORT: ${DB_PORT}
  #     POSTGRES_USER: ${DB_USER}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     POSTGRES_DB: ${DB_NAME}
  #     DB_URL: ${DB_URL}
  #     CORS_ORIGIN: ${CORS_ORIGIN}
  #   networks:
  #     - my_network
  #   ports:
  #     - ${PORT}:${PORT}

volumes:
  postgres_data:
  es01_data:
    driver: local
  es02_data:
    driver: local

networks:
  my_network:
    driver: bridge
