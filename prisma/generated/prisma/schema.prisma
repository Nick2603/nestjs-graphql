model Profile {
  id String @id @default(uuid())

  name String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique @map("user_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("profiles")
}

model UserRole {
  id String @id @default(uuid())

  title RoleEnum @unique

  users   User[]   @relation("User_Role")
  userIds String[] @map("user_ids")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user_roles")
}

enum RoleEnum {
  USER
  MANAGER
  ADMIN
}

generator client {
  provider        = "prisma-client-js"
  output          = "../generated/prisma"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id String @id @default(uuid())

  password String
  email    String @unique

  profile   Profile?
  profileId String?  @unique @map("profile_id")

  roles   UserRole[] @relation("User_Role")
  roleIds String[]   @map("role_ids")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}
